# Perform tests before build. If tests fail, image will not be build
stages:
  - test
  - build

run_tests:
  stage: test
  image: python:3.10
  script:
    - ./install.dev.sh
    - source .env/bin/activate
    - ./test.sh
  only:
    - tags
  timeout: 2 minutes

build_docker_image:
  stage: build
  image: docker:20
  services:
    - docker:20-dind
  script:
    # Validate git tag format
    - "MATCHED_TAG=$(echo $CI_COMMIT_TAG | grep -oE '^([0-9]+\\.){2}[0-9]+$')"
    - 'if [ -z "$MATCHED_TAG" ]; then echo "ERROR: Invalid tag format, should be a three part version number (e.g. 1.2.3)" && exit 1; fi'
    # Build Docker image
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - IMAGE_TAG="$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - 'if docker pull $IMAGE_TAG > /dev/null 2>&1; then echo "ERROR: An image with the given tag already exists. Please increment the contents of the VERSION file" && exit 1; fi'
    - docker build . -t $IMAGE_TAG
    - docker push $IMAGE_TAG
  only:
    - tags
  timeout: 5 minutes
